name: voiceover-test
on:
  push:
    branches:
      - voiceover

jobs:
  voiceover-test:
    runs-on: macos-13
    steps:
      # Checkout all repos first (helps cache purposes)
      - uses: actions/checkout@v4

      - uses: robinraju/release-downloader@v1.10
        with:
          repository: 'w3c/aria-at-automation-driver'
          tag: 'v0.0.1-beta'
          extract: true
          out-file-path: aria-at-automation-driver

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: "npm"
          cache-dependency-path: "**/package-lock.json"

      - name: "automation-driver: npm install"
        working-directory: aria-at-automation-driver/package
        run: npm install

      - name: "automation-driver: install"
        env:
          DEBUG: '*'
        working-directory: aria-at-automation-driver/package
        run: ./bin/at-driver install --unattended

      - name: Wait for server to be ready
        working-directory: aria-at-automation-driver/package
        run: ../../wait-for-server.sh

      # https://developer.apple.com/documentation/webkit/testing_with_webdriver_in_safari
      - name: Enable SafariDriver
        run: sudo /usr/bin/safaridriver --enable

      - name: Checkout aria-at ref ${{ inputs.aria_at_ref || 'master' }}
        uses: actions/checkout@v4
        with:
          repository: "w3c/aria-at"
          path: "aria-at"

      - name: Setup Environment
        uses: guidepup/setup-action@0.15.3

      - name: Checkout aria-at-automation-harness
        uses: actions/checkout@v4
        with:
          repository: "w3c/aria-at-automation-harness"
          ref: "main"
          path: "aria-at-automation-harness"

      - name: "aria-at: npm install"
        working-directory: aria-at
        run: npm install

      - name: "aria-at: npm run build"
        working-directory: aria-at
        run: npm run build

      - name: "automation-harness: npm install"
        working-directory: aria-at-automation-harness
        run: npm install

      - name: Run tests
        env:
          ARIA_AT_TEST_PATTERN: '{reference/**,test-*-nvda.*}'
          ARIA_AT_WORK_DIR: tests/alert
          BROWSER: safari
        run: ./run-tester.sh

      - name: upload *.{log,png}
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: logs
          path: |
            *.log
            *.png
